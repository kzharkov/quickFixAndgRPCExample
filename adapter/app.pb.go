// Code generated by protoc-gen-go. DO NOT EDIT.
// source: app.proto

package adapter

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// ExecutionReport messages
type OrderState int32

const (
	OrderState_UNDEFINED       OrderState = 0
	OrderState_OPEN            OrderState = 1
	OrderState_CLOSED          OrderState = 2
	OrderState_PENDING         OrderState = 3
	OrderState_BOOKED          OrderState = 4
	OrderState_FILLED          OrderState = 5
	OrderState_PARTIALLYFILLED OrderState = 6
)

var OrderState_name = map[int32]string{
	0: "UNDEFINED",
	1: "OPEN",
	2: "CLOSED",
	3: "PENDING",
	4: "BOOKED",
	5: "FILLED",
	6: "PARTIALLYFILLED",
}

var OrderState_value = map[string]int32{
	"UNDEFINED":       0,
	"OPEN":            1,
	"CLOSED":          2,
	"PENDING":         3,
	"BOOKED":          4,
	"FILLED":          5,
	"PARTIALLYFILLED": 6,
}

func (x OrderState) String() string {
	return proto.EnumName(OrderState_name, int32(x))
}

func (OrderState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e0f9056a14b86d47, []int{0}
}

type OrderType int32

const (
	OrderType__UNDEFINED OrderType = 0
	OrderType_FOK        OrderType = 1
	OrderType_IOC        OrderType = 2
	OrderType_MASSQUOTE  OrderType = 3
)

var OrderType_name = map[int32]string{
	0: "_UNDEFINED",
	1: "FOK",
	2: "IOC",
	3: "MASSQUOTE",
}

var OrderType_value = map[string]int32{
	"_UNDEFINED": 0,
	"FOK":        1,
	"IOC":        2,
	"MASSQUOTE":  3,
}

func (x OrderType) String() string {
	return proto.EnumName(OrderType_name, int32(x))
}

func (OrderType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e0f9056a14b86d47, []int{1}
}

type Side int32

const (
	Side___UNDEFINED Side = 0
	Side_BUY         Side = 1
	Side_SELL        Side = 2
)

var Side_name = map[int32]string{
	0: "__UNDEFINED",
	1: "BUY",
	2: "SELL",
}

var Side_value = map[string]int32{
	"__UNDEFINED": 0,
	"BUY":         1,
	"SELL":        2,
}

func (x Side) String() string {
	return proto.EnumName(Side_name, int32(x))
}

func (Side) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e0f9056a14b86d47, []int{2}
}

// StreamPrices messages:
type Ccypair struct {
	Client               string   `protobuf:"bytes,1,opt,name=client,proto3" json:"client,omitempty"`
	Ccypair              string   `protobuf:"bytes,2,opt,name=ccypair,proto3" json:"ccypair,omitempty"`
	Onoff                bool     `protobuf:"varint,3,opt,name=onoff,proto3" json:"onoff,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Ccypair) Reset()         { *m = Ccypair{} }
func (m *Ccypair) String() string { return proto.CompactTextString(m) }
func (*Ccypair) ProtoMessage()    {}
func (*Ccypair) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0f9056a14b86d47, []int{0}
}

func (m *Ccypair) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ccypair.Unmarshal(m, b)
}
func (m *Ccypair) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ccypair.Marshal(b, m, deterministic)
}
func (m *Ccypair) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ccypair.Merge(m, src)
}
func (m *Ccypair) XXX_Size() int {
	return xxx_messageInfo_Ccypair.Size(m)
}
func (m *Ccypair) XXX_DiscardUnknown() {
	xxx_messageInfo_Ccypair.DiscardUnknown(m)
}

var xxx_messageInfo_Ccypair proto.InternalMessageInfo

func (m *Ccypair) GetClient() string {
	if m != nil {
		return m.Client
	}
	return ""
}

func (m *Ccypair) GetCcypair() string {
	if m != nil {
		return m.Ccypair
	}
	return ""
}

func (m *Ccypair) GetOnoff() bool {
	if m != nil {
		return m.Onoff
	}
	return false
}

type Level struct {
	Level                int32    `protobuf:"varint,1,opt,name=level,proto3" json:"level,omitempty"`
	Bid                  float32  `protobuf:"fixed32,2,opt,name=bid,proto3" json:"bid,omitempty"`
	Ask                  float32  `protobuf:"fixed32,3,opt,name=ask,proto3" json:"ask,omitempty"`
	Addon                float32  `protobuf:"fixed32,4,opt,name=addon,proto3" json:"addon,omitempty"`
	Active               bool     `protobuf:"varint,5,opt,name=active,proto3" json:"active,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Level) Reset()         { *m = Level{} }
func (m *Level) String() string { return proto.CompactTextString(m) }
func (*Level) ProtoMessage()    {}
func (*Level) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0f9056a14b86d47, []int{1}
}

func (m *Level) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Level.Unmarshal(m, b)
}
func (m *Level) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Level.Marshal(b, m, deterministic)
}
func (m *Level) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Level.Merge(m, src)
}
func (m *Level) XXX_Size() int {
	return xxx_messageInfo_Level.Size(m)
}
func (m *Level) XXX_DiscardUnknown() {
	xxx_messageInfo_Level.DiscardUnknown(m)
}

var xxx_messageInfo_Level proto.InternalMessageInfo

func (m *Level) GetLevel() int32 {
	if m != nil {
		return m.Level
	}
	return 0
}

func (m *Level) GetBid() float32 {
	if m != nil {
		return m.Bid
	}
	return 0
}

func (m *Level) GetAsk() float32 {
	if m != nil {
		return m.Ask
	}
	return 0
}

func (m *Level) GetAddon() float32 {
	if m != nil {
		return m.Addon
	}
	return 0
}

func (m *Level) GetActive() bool {
	if m != nil {
		return m.Active
	}
	return false
}

type Book struct {
	Ccypair              string   `protobuf:"bytes,1,opt,name=ccypair,proto3" json:"ccypair,omitempty"`
	Mid                  float64  `protobuf:"fixed64,2,opt,name=mid,proto3" json:"mid,omitempty"`
	Timestamp            int64    `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Shift                float64  `protobuf:"fixed64,4,opt,name=shift,proto3" json:"shift,omitempty"`
	Spread               float64  `protobuf:"fixed64,5,opt,name=spread,proto3" json:"spread,omitempty"`
	Levels               []*Level `protobuf:"bytes,6,rep,name=levels,proto3" json:"levels,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Book) Reset()         { *m = Book{} }
func (m *Book) String() string { return proto.CompactTextString(m) }
func (*Book) ProtoMessage()    {}
func (*Book) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0f9056a14b86d47, []int{2}
}

func (m *Book) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Book.Unmarshal(m, b)
}
func (m *Book) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Book.Marshal(b, m, deterministic)
}
func (m *Book) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Book.Merge(m, src)
}
func (m *Book) XXX_Size() int {
	return xxx_messageInfo_Book.Size(m)
}
func (m *Book) XXX_DiscardUnknown() {
	xxx_messageInfo_Book.DiscardUnknown(m)
}

var xxx_messageInfo_Book proto.InternalMessageInfo

func (m *Book) GetCcypair() string {
	if m != nil {
		return m.Ccypair
	}
	return ""
}

func (m *Book) GetMid() float64 {
	if m != nil {
		return m.Mid
	}
	return 0
}

func (m *Book) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *Book) GetShift() float64 {
	if m != nil {
		return m.Shift
	}
	return 0
}

func (m *Book) GetSpread() float64 {
	if m != nil {
		return m.Spread
	}
	return 0
}

func (m *Book) GetLevels() []*Level {
	if m != nil {
		return m.Levels
	}
	return nil
}

// StreamCommands messages:
type Status struct {
	Client               string   `protobuf:"bytes,1,opt,name=client,proto3" json:"client,omitempty"`
	Status               string   `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Message              string   `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Status) Reset()         { *m = Status{} }
func (m *Status) String() string { return proto.CompactTextString(m) }
func (*Status) ProtoMessage()    {}
func (*Status) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0f9056a14b86d47, []int{3}
}

func (m *Status) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Status.Unmarshal(m, b)
}
func (m *Status) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Status.Marshal(b, m, deterministic)
}
func (m *Status) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Status.Merge(m, src)
}
func (m *Status) XXX_Size() int {
	return xxx_messageInfo_Status.Size(m)
}
func (m *Status) XXX_DiscardUnknown() {
	xxx_messageInfo_Status.DiscardUnknown(m)
}

var xxx_messageInfo_Status proto.InternalMessageInfo

func (m *Status) GetClient() string {
	if m != nil {
		return m.Client
	}
	return ""
}

func (m *Status) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Status) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type Command struct {
	Command              string   `protobuf:"bytes,1,opt,name=command,proto3" json:"command,omitempty"`
	Action               string   `protobuf:"bytes,2,opt,name=action,proto3" json:"action,omitempty"`
	Item                 string   `protobuf:"bytes,3,opt,name=item,proto3" json:"item,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Command) Reset()         { *m = Command{} }
func (m *Command) String() string { return proto.CompactTextString(m) }
func (*Command) ProtoMessage()    {}
func (*Command) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0f9056a14b86d47, []int{4}
}

func (m *Command) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Command.Unmarshal(m, b)
}
func (m *Command) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Command.Marshal(b, m, deterministic)
}
func (m *Command) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Command.Merge(m, src)
}
func (m *Command) XXX_Size() int {
	return xxx_messageInfo_Command.Size(m)
}
func (m *Command) XXX_DiscardUnknown() {
	xxx_messageInfo_Command.DiscardUnknown(m)
}

var xxx_messageInfo_Command proto.InternalMessageInfo

func (m *Command) GetCommand() string {
	if m != nil {
		return m.Command
	}
	return ""
}

func (m *Command) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *Command) GetItem() string {
	if m != nil {
		return m.Item
	}
	return ""
}

type ExecutionReport struct {
	Id                   string     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	State                OrderState `protobuf:"varint,2,opt,name=state,proto3,enum=OrderState" json:"state,omitempty"`
	Counterparty         string     `protobuf:"bytes,3,opt,name=counterparty,proto3" json:"counterparty,omitempty"`
	Ccypair              string     `protobuf:"bytes,4,opt,name=ccypair,proto3" json:"ccypair,omitempty"`
	Side                 Side       `protobuf:"varint,5,opt,name=side,proto3,enum=Side" json:"side,omitempty"`
	Amount1              float64    `protobuf:"fixed64,6,opt,name=amount1,proto3" json:"amount1,omitempty"`
	Amount2              float64    `protobuf:"fixed64,7,opt,name=amount2,proto3" json:"amount2,omitempty"`
	Price                float64    `protobuf:"fixed64,8,opt,name=price,proto3" json:"price,omitempty"`
	Fee                  float64    `protobuf:"fixed64,9,opt,name=fee,proto3" json:"fee,omitempty"`
	Type                 OrderType  `protobuf:"varint,10,opt,name=type,proto3,enum=OrderType" json:"type,omitempty"`
	Epoche               int64      `protobuf:"varint,11,opt,name=epoche,proto3" json:"epoche,omitempty"`
	Comment              string     `protobuf:"bytes,12,opt,name=comment,proto3" json:"comment,omitempty"`
	Autobook             bool       `protobuf:"varint,13,opt,name=autobook,proto3" json:"autobook,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ExecutionReport) Reset()         { *m = ExecutionReport{} }
func (m *ExecutionReport) String() string { return proto.CompactTextString(m) }
func (*ExecutionReport) ProtoMessage()    {}
func (*ExecutionReport) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0f9056a14b86d47, []int{5}
}

func (m *ExecutionReport) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExecutionReport.Unmarshal(m, b)
}
func (m *ExecutionReport) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExecutionReport.Marshal(b, m, deterministic)
}
func (m *ExecutionReport) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExecutionReport.Merge(m, src)
}
func (m *ExecutionReport) XXX_Size() int {
	return xxx_messageInfo_ExecutionReport.Size(m)
}
func (m *ExecutionReport) XXX_DiscardUnknown() {
	xxx_messageInfo_ExecutionReport.DiscardUnknown(m)
}

var xxx_messageInfo_ExecutionReport proto.InternalMessageInfo

func (m *ExecutionReport) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ExecutionReport) GetState() OrderState {
	if m != nil {
		return m.State
	}
	return OrderState_UNDEFINED
}

func (m *ExecutionReport) GetCounterparty() string {
	if m != nil {
		return m.Counterparty
	}
	return ""
}

func (m *ExecutionReport) GetCcypair() string {
	if m != nil {
		return m.Ccypair
	}
	return ""
}

func (m *ExecutionReport) GetSide() Side {
	if m != nil {
		return m.Side
	}
	return Side___UNDEFINED
}

func (m *ExecutionReport) GetAmount1() float64 {
	if m != nil {
		return m.Amount1
	}
	return 0
}

func (m *ExecutionReport) GetAmount2() float64 {
	if m != nil {
		return m.Amount2
	}
	return 0
}

func (m *ExecutionReport) GetPrice() float64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *ExecutionReport) GetFee() float64 {
	if m != nil {
		return m.Fee
	}
	return 0
}

func (m *ExecutionReport) GetType() OrderType {
	if m != nil {
		return m.Type
	}
	return OrderType__UNDEFINED
}

func (m *ExecutionReport) GetEpoche() int64 {
	if m != nil {
		return m.Epoche
	}
	return 0
}

func (m *ExecutionReport) GetComment() string {
	if m != nil {
		return m.Comment
	}
	return ""
}

func (m *ExecutionReport) GetAutobook() bool {
	if m != nil {
		return m.Autobook
	}
	return false
}

type Confirmation struct {
	Id                   uint32     `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	State                OrderState `protobuf:"varint,2,opt,name=state,proto3,enum=OrderState" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Confirmation) Reset()         { *m = Confirmation{} }
func (m *Confirmation) String() string { return proto.CompactTextString(m) }
func (*Confirmation) ProtoMessage()    {}
func (*Confirmation) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0f9056a14b86d47, []int{6}
}

func (m *Confirmation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Confirmation.Unmarshal(m, b)
}
func (m *Confirmation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Confirmation.Marshal(b, m, deterministic)
}
func (m *Confirmation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Confirmation.Merge(m, src)
}
func (m *Confirmation) XXX_Size() int {
	return xxx_messageInfo_Confirmation.Size(m)
}
func (m *Confirmation) XXX_DiscardUnknown() {
	xxx_messageInfo_Confirmation.DiscardUnknown(m)
}

var xxx_messageInfo_Confirmation proto.InternalMessageInfo

func (m *Confirmation) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Confirmation) GetState() OrderState {
	if m != nil {
		return m.State
	}
	return OrderState_UNDEFINED
}

// GetConfig messages:
type Setup struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Setup) Reset()         { *m = Setup{} }
func (m *Setup) String() string { return proto.CompactTextString(m) }
func (*Setup) ProtoMessage()    {}
func (*Setup) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0f9056a14b86d47, []int{7}
}

func (m *Setup) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Setup.Unmarshal(m, b)
}
func (m *Setup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Setup.Marshal(b, m, deterministic)
}
func (m *Setup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Setup.Merge(m, src)
}
func (m *Setup) XXX_Size() int {
	return xxx_messageInfo_Setup.Size(m)
}
func (m *Setup) XXX_DiscardUnknown() {
	xxx_messageInfo_Setup.DiscardUnknown(m)
}

var xxx_messageInfo_Setup proto.InternalMessageInfo

func (m *Setup) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type Config struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Limits               []*Limit `protobuf:"bytes,2,rep,name=limits,proto3" json:"limits,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Config) Reset()         { *m = Config{} }
func (m *Config) String() string { return proto.CompactTextString(m) }
func (*Config) ProtoMessage()    {}
func (*Config) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0f9056a14b86d47, []int{8}
}

func (m *Config) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Config.Unmarshal(m, b)
}
func (m *Config) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Config.Marshal(b, m, deterministic)
}
func (m *Config) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Config.Merge(m, src)
}
func (m *Config) XXX_Size() int {
	return xxx_messageInfo_Config.Size(m)
}
func (m *Config) XXX_DiscardUnknown() {
	xxx_messageInfo_Config.DiscardUnknown(m)
}

var xxx_messageInfo_Config proto.InternalMessageInfo

func (m *Config) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Config) GetLimits() []*Limit {
	if m != nil {
		return m.Limits
	}
	return nil
}

type Vol struct {
	Level                int32    `protobuf:"varint,1,opt,name=level,proto3" json:"level,omitempty"`
	Bid                  float32  `protobuf:"fixed32,2,opt,name=bid,proto3" json:"bid,omitempty"`
	Ask                  float32  `protobuf:"fixed32,3,opt,name=ask,proto3" json:"ask,omitempty"`
	Active               bool     `protobuf:"varint,4,opt,name=active,proto3" json:"active,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Vol) Reset()         { *m = Vol{} }
func (m *Vol) String() string { return proto.CompactTextString(m) }
func (*Vol) ProtoMessage()    {}
func (*Vol) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0f9056a14b86d47, []int{9}
}

func (m *Vol) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Vol.Unmarshal(m, b)
}
func (m *Vol) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Vol.Marshal(b, m, deterministic)
}
func (m *Vol) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Vol.Merge(m, src)
}
func (m *Vol) XXX_Size() int {
	return xxx_messageInfo_Vol.Size(m)
}
func (m *Vol) XXX_DiscardUnknown() {
	xxx_messageInfo_Vol.DiscardUnknown(m)
}

var xxx_messageInfo_Vol proto.InternalMessageInfo

func (m *Vol) GetLevel() int32 {
	if m != nil {
		return m.Level
	}
	return 0
}

func (m *Vol) GetBid() float32 {
	if m != nil {
		return m.Bid
	}
	return 0
}

func (m *Vol) GetAsk() float32 {
	if m != nil {
		return m.Ask
	}
	return 0
}

func (m *Vol) GetActive() bool {
	if m != nil {
		return m.Active
	}
	return false
}

type Limit struct {
	Ccypair              string   `protobuf:"bytes,1,opt,name=ccypair,proto3" json:"ccypair,omitempty"`
	TickSize             float32  `protobuf:"fixed32,2,opt,name=tickSize,proto3" json:"tickSize,omitempty"`
	TickValue            float32  `protobuf:"fixed32,3,opt,name=tickValue,proto3" json:"tickValue,omitempty"`
	MinOrderSize         float32  `protobuf:"fixed32,4,opt,name=minOrderSize,proto3" json:"minOrderSize,omitempty"`
	Id                   uint32   `protobuf:"varint,5,opt,name=id,proto3" json:"id,omitempty"`
	TargetBalance        float32  `protobuf:"fixed32,6,opt,name=targetBalance,proto3" json:"targetBalance,omitempty"`
	Balance              float32  `protobuf:"fixed32,7,opt,name=balance,proto3" json:"balance,omitempty"`
	TargetCredit         float32  `protobuf:"fixed32,8,opt,name=targetCredit,proto3" json:"targetCredit,omitempty"`
	CreditLine           float32  `protobuf:"fixed32,9,opt,name=creditLine,proto3" json:"creditLine,omitempty"`
	Volumes              []*Vol   `protobuf:"bytes,10,rep,name=volumes,proto3" json:"volumes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Limit) Reset()         { *m = Limit{} }
func (m *Limit) String() string { return proto.CompactTextString(m) }
func (*Limit) ProtoMessage()    {}
func (*Limit) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0f9056a14b86d47, []int{10}
}

func (m *Limit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Limit.Unmarshal(m, b)
}
func (m *Limit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Limit.Marshal(b, m, deterministic)
}
func (m *Limit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Limit.Merge(m, src)
}
func (m *Limit) XXX_Size() int {
	return xxx_messageInfo_Limit.Size(m)
}
func (m *Limit) XXX_DiscardUnknown() {
	xxx_messageInfo_Limit.DiscardUnknown(m)
}

var xxx_messageInfo_Limit proto.InternalMessageInfo

func (m *Limit) GetCcypair() string {
	if m != nil {
		return m.Ccypair
	}
	return ""
}

func (m *Limit) GetTickSize() float32 {
	if m != nil {
		return m.TickSize
	}
	return 0
}

func (m *Limit) GetTickValue() float32 {
	if m != nil {
		return m.TickValue
	}
	return 0
}

func (m *Limit) GetMinOrderSize() float32 {
	if m != nil {
		return m.MinOrderSize
	}
	return 0
}

func (m *Limit) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Limit) GetTargetBalance() float32 {
	if m != nil {
		return m.TargetBalance
	}
	return 0
}

func (m *Limit) GetBalance() float32 {
	if m != nil {
		return m.Balance
	}
	return 0
}

func (m *Limit) GetTargetCredit() float32 {
	if m != nil {
		return m.TargetCredit
	}
	return 0
}

func (m *Limit) GetCreditLine() float32 {
	if m != nil {
		return m.CreditLine
	}
	return 0
}

func (m *Limit) GetVolumes() []*Vol {
	if m != nil {
		return m.Volumes
	}
	return nil
}

// StreamBook
type Market struct {
	Client               string       `protobuf:"bytes,1,opt,name=client,proto3" json:"client,omitempty"`
	Ccypair              string       `protobuf:"bytes,2,opt,name=ccypair,proto3" json:"ccypair,omitempty"`
	Bids                 []*BookEntry `protobuf:"bytes,3,rep,name=bids,proto3" json:"bids,omitempty"`
	Asks                 []*BookEntry `protobuf:"bytes,4,rep,name=asks,proto3" json:"asks,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Market) Reset()         { *m = Market{} }
func (m *Market) String() string { return proto.CompactTextString(m) }
func (*Market) ProtoMessage()    {}
func (*Market) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0f9056a14b86d47, []int{11}
}

func (m *Market) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Market.Unmarshal(m, b)
}
func (m *Market) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Market.Marshal(b, m, deterministic)
}
func (m *Market) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Market.Merge(m, src)
}
func (m *Market) XXX_Size() int {
	return xxx_messageInfo_Market.Size(m)
}
func (m *Market) XXX_DiscardUnknown() {
	xxx_messageInfo_Market.DiscardUnknown(m)
}

var xxx_messageInfo_Market proto.InternalMessageInfo

func (m *Market) GetClient() string {
	if m != nil {
		return m.Client
	}
	return ""
}

func (m *Market) GetCcypair() string {
	if m != nil {
		return m.Ccypair
	}
	return ""
}

func (m *Market) GetBids() []*BookEntry {
	if m != nil {
		return m.Bids
	}
	return nil
}

func (m *Market) GetAsks() []*BookEntry {
	if m != nil {
		return m.Asks
	}
	return nil
}

type BookEntry struct {
	Type                 string   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Price                float64  `protobuf:"fixed64,2,opt,name=price,proto3" json:"price,omitempty"`
	Amount               float64  `protobuf:"fixed64,3,opt,name=amount,proto3" json:"amount,omitempty"`
	Total                float64  `protobuf:"fixed64,4,opt,name=total,proto3" json:"total,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BookEntry) Reset()         { *m = BookEntry{} }
func (m *BookEntry) String() string { return proto.CompactTextString(m) }
func (*BookEntry) ProtoMessage()    {}
func (*BookEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0f9056a14b86d47, []int{12}
}

func (m *BookEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BookEntry.Unmarshal(m, b)
}
func (m *BookEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BookEntry.Marshal(b, m, deterministic)
}
func (m *BookEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BookEntry.Merge(m, src)
}
func (m *BookEntry) XXX_Size() int {
	return xxx_messageInfo_BookEntry.Size(m)
}
func (m *BookEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_BookEntry.DiscardUnknown(m)
}

var xxx_messageInfo_BookEntry proto.InternalMessageInfo

func (m *BookEntry) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *BookEntry) GetPrice() float64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *BookEntry) GetAmount() float64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *BookEntry) GetTotal() float64 {
	if m != nil {
		return m.Total
	}
	return 0
}

// PushBalance
type Balance struct {
	Name                 string          `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Balances             []*BalanceEntry `protobuf:"bytes,2,rep,name=balances,proto3" json:"balances,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Balance) Reset()         { *m = Balance{} }
func (m *Balance) String() string { return proto.CompactTextString(m) }
func (*Balance) ProtoMessage()    {}
func (*Balance) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0f9056a14b86d47, []int{13}
}

func (m *Balance) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Balance.Unmarshal(m, b)
}
func (m *Balance) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Balance.Marshal(b, m, deterministic)
}
func (m *Balance) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Balance.Merge(m, src)
}
func (m *Balance) XXX_Size() int {
	return xxx_messageInfo_Balance.Size(m)
}
func (m *Balance) XXX_DiscardUnknown() {
	xxx_messageInfo_Balance.DiscardUnknown(m)
}

var xxx_messageInfo_Balance proto.InternalMessageInfo

func (m *Balance) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Balance) GetBalances() []*BalanceEntry {
	if m != nil {
		return m.Balances
	}
	return nil
}

type BalanceEntry struct {
	Ccy                  string   `protobuf:"bytes,1,opt,name=ccy,proto3" json:"ccy,omitempty"`
	Balance              float64  `protobuf:"fixed64,2,opt,name=balance,proto3" json:"balance,omitempty"`
	Line                 float64  `protobuf:"fixed64,3,opt,name=line,proto3" json:"line,omitempty"`
	Target               float64  `protobuf:"fixed64,4,opt,name=target,proto3" json:"target,omitempty"`
	TargetCredit         float64  `protobuf:"fixed64,5,opt,name=targetCredit,proto3" json:"targetCredit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BalanceEntry) Reset()         { *m = BalanceEntry{} }
func (m *BalanceEntry) String() string { return proto.CompactTextString(m) }
func (*BalanceEntry) ProtoMessage()    {}
func (*BalanceEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0f9056a14b86d47, []int{14}
}

func (m *BalanceEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BalanceEntry.Unmarshal(m, b)
}
func (m *BalanceEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BalanceEntry.Marshal(b, m, deterministic)
}
func (m *BalanceEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BalanceEntry.Merge(m, src)
}
func (m *BalanceEntry) XXX_Size() int {
	return xxx_messageInfo_BalanceEntry.Size(m)
}
func (m *BalanceEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_BalanceEntry.DiscardUnknown(m)
}

var xxx_messageInfo_BalanceEntry proto.InternalMessageInfo

func (m *BalanceEntry) GetCcy() string {
	if m != nil {
		return m.Ccy
	}
	return ""
}

func (m *BalanceEntry) GetBalance() float64 {
	if m != nil {
		return m.Balance
	}
	return 0
}

func (m *BalanceEntry) GetLine() float64 {
	if m != nil {
		return m.Line
	}
	return 0
}

func (m *BalanceEntry) GetTarget() float64 {
	if m != nil {
		return m.Target
	}
	return 0
}

func (m *BalanceEntry) GetTargetCredit() float64 {
	if m != nil {
		return m.TargetCredit
	}
	return 0
}

func init() {
	proto.RegisterEnum("OrderState", OrderState_name, OrderState_value)
	proto.RegisterEnum("OrderType", OrderType_name, OrderType_value)
	proto.RegisterEnum("Side", Side_name, Side_value)
	proto.RegisterType((*Ccypair)(nil), "Ccypair")
	proto.RegisterType((*Level)(nil), "Level")
	proto.RegisterType((*Book)(nil), "Book")
	proto.RegisterType((*Status)(nil), "Status")
	proto.RegisterType((*Command)(nil), "Command")
	proto.RegisterType((*ExecutionReport)(nil), "ExecutionReport")
	proto.RegisterType((*Confirmation)(nil), "Confirmation")
	proto.RegisterType((*Setup)(nil), "Setup")
	proto.RegisterType((*Config)(nil), "Config")
	proto.RegisterType((*Vol)(nil), "Vol")
	proto.RegisterType((*Limit)(nil), "Limit")
	proto.RegisterType((*Market)(nil), "Market")
	proto.RegisterType((*BookEntry)(nil), "BookEntry")
	proto.RegisterType((*Balance)(nil), "Balance")
	proto.RegisterType((*BalanceEntry)(nil), "BalanceEntry")
}

func init() { proto.RegisterFile("app.proto", fileDescriptor_e0f9056a14b86d47) }

var fileDescriptor_e0f9056a14b86d47 = []byte{
	// 1086 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x56, 0xcd, 0x6e, 0xdb, 0x46,
	0x10, 0x36, 0x29, 0x8a, 0x94, 0x46, 0x96, 0x43, 0x6c, 0x8a, 0x82, 0x55, 0x0b, 0xc1, 0x25, 0x1a,
	0xd4, 0xf1, 0x81, 0x68, 0xd5, 0x4b, 0x0f, 0xb9, 0xd8, 0x92, 0x9c, 0x1a, 0x91, 0x2d, 0x67, 0x65,
	0xbb, 0xc8, 0x29, 0xa0, 0xa9, 0x95, 0x4d, 0x48, 0xfc, 0x01, 0xb9, 0x32, 0xaa, 0x9c, 0x7a, 0xee,
	0x43, 0xf4, 0x25, 0xfa, 0x50, 0x7d, 0x8d, 0x62, 0x66, 0x97, 0xfa, 0x71, 0xd2, 0xa2, 0x68, 0x6f,
	0xf3, 0x7d, 0xb3, 0x9c, 0x9d, 0x9d, 0xf9, 0x66, 0x97, 0xd0, 0x0c, 0xf3, 0x3c, 0xc8, 0x8b, 0x4c,
	0x66, 0xfe, 0x5b, 0x70, 0xfa, 0xd1, 0x2a, 0x0f, 0xe3, 0x82, 0x7d, 0x0e, 0x76, 0xb4, 0x88, 0x45,
	0x2a, 0x3d, 0xe3, 0xd0, 0x38, 0x6a, 0x72, 0x8d, 0x98, 0x07, 0x4e, 0xa4, 0x96, 0x78, 0x26, 0x39,
	0x2a, 0xc8, 0x3e, 0x83, 0x7a, 0x96, 0x66, 0xb3, 0x99, 0x57, 0x3b, 0x34, 0x8e, 0x1a, 0x5c, 0x01,
	0x3f, 0x83, 0xfa, 0x48, 0x3c, 0x8a, 0x05, 0xba, 0x17, 0x68, 0x50, 0xbc, 0x3a, 0x57, 0x80, 0xb9,
	0x50, 0xbb, 0x8b, 0xa7, 0x14, 0xca, 0xe4, 0x68, 0x22, 0x13, 0x96, 0x73, 0x0a, 0x62, 0x72, 0x34,
	0xf1, 0xcb, 0x70, 0x3a, 0xcd, 0x52, 0xcf, 0x22, 0x4e, 0x01, 0x4c, 0x30, 0x8c, 0x64, 0xfc, 0x28,
	0xbc, 0x3a, 0xed, 0xa7, 0x91, 0xff, 0xbb, 0x01, 0xd6, 0x69, 0x96, 0xcd, 0xb7, 0x33, 0x35, 0x76,
	0x33, 0x75, 0xa1, 0x96, 0xe8, 0x4d, 0x0d, 0x8e, 0x26, 0xfb, 0x0a, 0x9a, 0x32, 0x4e, 0x44, 0x29,
	0xc3, 0x24, 0xa7, 0xad, 0x6b, 0x7c, 0x43, 0x60, 0x02, 0xe5, 0x43, 0x3c, 0x93, 0x94, 0x80, 0xc1,
	0x15, 0xc0, 0x04, 0xca, 0xbc, 0x10, 0xe1, 0x94, 0x12, 0x30, 0xb8, 0x46, 0xac, 0x0b, 0x36, 0x9d,
	0xad, 0xf4, 0xec, 0xc3, 0xda, 0x51, 0xab, 0x67, 0x07, 0x54, 0x00, 0xae, 0x59, 0x9f, 0x83, 0x3d,
	0x91, 0xa1, 0x5c, 0x96, 0x7f, 0x5b, 0x63, 0x8c, 0x4c, 0x2b, 0x74, 0x89, 0x35, 0xc2, 0x13, 0x25,
	0xa2, 0x2c, 0xc3, 0x7b, 0x41, 0x39, 0x36, 0x79, 0x05, 0xfd, 0x31, 0x38, 0xfd, 0x2c, 0x49, 0xc2,
	0x74, 0x4a, 0xc7, 0x56, 0xe6, 0xfa, 0xd8, 0xda, 0xa3, 0x2b, 0x96, 0xa5, 0x55, 0x58, 0x85, 0x18,
	0x03, 0x2b, 0x96, 0x22, 0xd1, 0x31, 0xc9, 0xf6, 0xff, 0x34, 0xe1, 0xd9, 0xf0, 0x17, 0x11, 0x2d,
	0x71, 0x05, 0x17, 0x79, 0x56, 0x48, 0x76, 0x00, 0x66, 0x5c, 0x05, 0x35, 0xe3, 0x29, 0xfb, 0x1a,
	0xea, 0x98, 0x98, 0xa0, 0x70, 0x07, 0xbd, 0x56, 0x30, 0x2e, 0xa6, 0xa2, 0xc0, 0xb3, 0x09, 0xae,
	0x3c, 0xcc, 0x87, 0xfd, 0x28, 0x5b, 0xa6, 0x52, 0x14, 0x79, 0x58, 0xc8, 0x95, 0xde, 0x62, 0x87,
	0xdb, 0xee, 0x93, 0xb5, 0xdb, 0xa7, 0x2f, 0xc0, 0x2a, 0xe3, 0xa9, 0x6a, 0xf0, 0x41, 0xaf, 0x1e,
	0x4c, 0xe2, 0xa9, 0xe0, 0x44, 0xe1, 0x47, 0x61, 0x82, 0x51, 0xbe, 0xf7, 0x6c, 0xaa, 0x7e, 0x05,
	0x37, 0x9e, 0x9e, 0xe7, 0x6c, 0x7b, 0x7a, 0xd8, 0xc6, 0xbc, 0x88, 0x23, 0xe1, 0x35, 0x54, 0x1b,
	0x09, 0xa0, 0x18, 0x66, 0x42, 0x78, 0x4d, 0x25, 0x86, 0x99, 0x10, 0xac, 0x0b, 0x96, 0x5c, 0xe5,
	0xc2, 0x03, 0xda, 0x16, 0xd4, 0xb1, 0xae, 0x57, 0xb9, 0xe0, 0xc4, 0x63, 0x1d, 0x45, 0x9e, 0x45,
	0x0f, 0xc2, 0x6b, 0x91, 0x52, 0x34, 0xaa, 0x2a, 0x8f, 0xfd, 0xdc, 0xdf, 0x54, 0x1e, 0x1b, 0xda,
	0x81, 0x46, 0xb8, 0x94, 0xd9, 0x5d, 0x96, 0xcd, 0xbd, 0x36, 0xa9, 0x75, 0x8d, 0xfd, 0x13, 0xd8,
	0xef, 0x67, 0xe9, 0x2c, 0x2e, 0x92, 0x90, 0xba, 0xb1, 0xa9, 0x72, 0xfb, 0x5f, 0x56, 0xd9, 0xff,
	0x12, 0xea, 0x13, 0x21, 0x97, 0x39, 0x76, 0x32, 0x0d, 0x13, 0xa1, 0x7b, 0x44, 0xb6, 0xff, 0x0a,
	0x6c, 0x8a, 0x7f, 0xff, 0x29, 0x2f, 0x89, 0x35, 0x4e, 0x62, 0x89, 0x52, 0xd3, 0x62, 0x45, 0xc8,
	0x35, 0xeb, 0xff, 0x0c, 0xb5, 0xdb, 0xec, 0xff, 0x0c, 0xef, 0x66, 0x4c, 0xad, 0x9d, 0x31, 0xfd,
	0xc3, 0x84, 0x3a, 0x6d, 0xf5, 0x0f, 0x73, 0xda, 0x81, 0x86, 0x8c, 0xa3, 0xf9, 0x24, 0xfe, 0x20,
	0xf4, 0x26, 0x6b, 0xac, 0x26, 0x36, 0x9a, 0xdf, 0x86, 0x8b, 0xa5, 0xd0, 0xfb, 0x6d, 0x08, 0xd4,
	0x5d, 0x12, 0xa7, 0xaa, 0x52, 0xf8, 0xb5, 0xba, 0x39, 0x76, 0x38, 0x5d, 0xe8, 0xfa, 0xba, 0xd0,
	0xdf, 0x40, 0x5b, 0x86, 0xc5, 0xbd, 0x90, 0xa7, 0xe1, 0x22, 0x4c, 0x23, 0x41, 0xc2, 0x32, 0xf9,
	0x2e, 0x89, 0xd9, 0xde, 0x69, 0xbf, 0x43, 0xfe, 0x0a, 0xe2, 0x9e, 0x6a, 0x69, 0xbf, 0x10, 0xd3,
	0x58, 0x92, 0xca, 0x4c, 0xbe, 0xc3, 0xb1, 0x2e, 0x40, 0x44, 0xd6, 0x28, 0x4e, 0x95, 0xe6, 0x4c,
	0xbe, 0xc5, 0xb0, 0x2e, 0x38, 0x8f, 0xd9, 0x62, 0x99, 0x88, 0xd2, 0x03, 0xea, 0x87, 0x15, 0xdc,
	0x66, 0x0b, 0x5e, 0x91, 0xfe, 0x07, 0xb0, 0x2f, 0xc2, 0x62, 0x2e, 0xe4, 0x7f, 0xb8, 0x9f, 0xbb,
	0x60, 0xdd, 0xc5, 0xd3, 0xd2, 0xab, 0x51, 0x60, 0x08, 0xf0, 0x92, 0x1c, 0xa6, 0xb2, 0x58, 0x71,
	0xe2, 0xd1, 0x1f, 0x96, 0xf3, 0xd2, 0xb3, 0x3e, 0xf6, 0x23, 0xef, 0x47, 0xd0, 0x5c, 0x53, 0xa8,
	0x25, 0x9a, 0x11, 0xad, 0x25, 0x9a, 0x8b, 0xf5, 0x7c, 0x99, 0xdb, 0xf3, 0x85, 0x02, 0xa0, 0x01,
	0xa4, 0x2e, 0x19, 0x5c, 0x23, 0x5c, 0x2d, 0x33, 0x19, 0x2e, 0xaa, 0x4b, 0x95, 0x80, 0xff, 0x13,
	0x38, 0x55, 0xa5, 0x3f, 0x25, 0xd7, 0x97, 0xd0, 0xd0, 0xe5, 0xae, 0x04, 0xdb, 0x0e, 0xf4, 0x7a,
	0x95, 0xea, 0xda, 0xed, 0xff, 0x66, 0xc0, 0xfe, 0xb6, 0x0b, 0xb5, 0x19, 0x45, 0x2b, 0x1d, 0x0e,
	0xcd, 0xed, 0x5e, 0xaa, 0x94, 0xd7, 0xbd, 0x64, 0x60, 0x2d, 0xb0, 0x43, 0x2a, 0x65, 0xb2, 0xf1,
	0x20, 0xaa, 0x97, 0x3a, 0x63, 0x8d, 0x3e, 0xea, 0xbb, 0x7a, 0x0d, 0x76, 0xb8, 0xe3, 0x39, 0xc0,
	0x66, 0x6c, 0x59, 0x1b, 0x9a, 0x37, 0x97, 0x83, 0xe1, 0xd9, 0xf9, 0xe5, 0x70, 0xe0, 0xee, 0xb1,
	0x06, 0x58, 0xe3, 0xab, 0xe1, 0xa5, 0x6b, 0x30, 0x00, 0xbb, 0x3f, 0x1a, 0x4f, 0x86, 0x03, 0xd7,
	0x64, 0x2d, 0x70, 0xae, 0x86, 0x97, 0x83, 0xf3, 0xcb, 0xd7, 0x6e, 0x0d, 0x1d, 0xa7, 0xe3, 0xf1,
	0x9b, 0xe1, 0xc0, 0xb5, 0xd0, 0x3e, 0x3b, 0x1f, 0x8d, 0x86, 0x03, 0xb7, 0xce, 0x9e, 0xc3, 0xb3,
	0xab, 0x13, 0x7e, 0x7d, 0x7e, 0x32, 0x1a, 0xbd, 0xd3, 0xa4, 0x7d, 0xfc, 0x0a, 0x9a, 0xeb, 0x2b,
	0x8b, 0x1d, 0x00, 0xbc, 0xdf, 0xde, 0xcc, 0x81, 0xda, 0xd9, 0xf8, 0x8d, 0x6b, 0xa0, 0x71, 0x3e,
	0xee, 0xbb, 0x26, 0x66, 0x73, 0x71, 0x32, 0x99, 0xbc, 0xbd, 0x19, 0x5f, 0x0f, 0xdd, 0xda, 0xf1,
	0x31, 0x58, 0x78, 0xcf, 0xb2, 0x67, 0xd0, 0x7a, 0xff, 0xf4, 0xcb, 0xd3, 0x9b, 0x77, 0xae, 0x81,
	0xf9, 0x4e, 0x86, 0xa3, 0x91, 0x6b, 0xf6, 0x7e, 0x35, 0xc1, 0xbc, 0xb8, 0x60, 0x2f, 0x60, 0x7f,
	0x22, 0x0b, 0x11, 0x26, 0x57, 0xd8, 0xf1, 0x92, 0x35, 0x02, 0xfd, 0x17, 0xd1, 0xa9, 0x93, 0x8a,
	0xfc, 0xbd, 0x23, 0xe3, 0x3b, 0x83, 0xbd, 0x84, 0x03, 0xb5, 0x4c, 0x3f, 0x55, 0x25, 0x73, 0x02,
	0xf5, 0x12, 0x76, 0x1a, 0x81, 0xe6, 0xf4, 0xd2, 0x1f, 0xe1, 0xf9, 0xd5, 0xb2, 0x7c, 0x78, 0xfa,
	0x02, 0xb9, 0xc1, 0x13, 0xa6, 0xd3, 0x0e, 0xb6, 0x2f, 0x4f, 0x7f, 0x8f, 0x75, 0xa1, 0xf9, 0x5a,
	0x48, 0x7d, 0xe3, 0xd9, 0x01, 0xdd, 0x8b, 0x1d, 0x47, 0xad, 0xba, 0xf7, 0xf7, 0xd8, 0x0b, 0x00,
	0x95, 0x04, 0xfd, 0x23, 0x38, 0x81, 0x1a, 0xa7, 0xce, 0x3a, 0x65, 0x9d, 0xc0, 0xb7, 0xd0, 0xc2,
	0x04, 0x2a, 0x2d, 0x36, 0x2a, 0x95, 0x75, 0xd6, 0x96, 0x5a, 0x78, 0x67, 0xd3, 0x9f, 0xd3, 0x0f,
	0x7f, 0x05, 0x00, 0x00, 0xff, 0xff, 0x79, 0x62, 0xe3, 0x56, 0x46, 0x09, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MMClient is the client API for MM service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MMClient interface {
	StreamPrices(ctx context.Context, opts ...grpc.CallOption) (MM_StreamPricesClient, error)
	StreamCommands(ctx context.Context, opts ...grpc.CallOption) (MM_StreamCommandsClient, error)
	PushExecutionReport(ctx context.Context, in *ExecutionReport, opts ...grpc.CallOption) (*Confirmation, error)
	GetConfig(ctx context.Context, in *Setup, opts ...grpc.CallOption) (*Config, error)
	StreamBook(ctx context.Context, opts ...grpc.CallOption) (MM_StreamBookClient, error)
	PushBalance(ctx context.Context, opts ...grpc.CallOption) (MM_PushBalanceClient, error)
}

type mMClient struct {
	cc *grpc.ClientConn
}

func (c *mMClient) StreamPrices(ctx context.Context, opts ...grpc.CallOption) (MM_StreamPricesClient, error) {
	panic("implement me")
}

func NewMMClient(cc *grpc.ClientConn) MMClient {
	return &mMClient{cc}
}

//func (c *mMClient) StreamPrices(ctx context.Context, opts ...grpc.CallOption) (MM_StreamPricesClient, error) {
//	stream, err := c.cc.NewStream(ctx, &_MM_serviceDesc.Streams[0], "/MM/StreamPrices", opts...)
//	if err != nil {
//		return nil, err
//	}
//	x := &mMStreamPricesClient{stream}
//	return x, nil
//}

type MM_StreamPricesClient interface {
	Send(*Ccypair) error
	Recv() (*Book, error)
	grpc.ClientStream
}

type mMStreamPricesClient struct {
	grpc.ClientStream
}

func (x *mMStreamPricesClient) Send(m *Ccypair) error {
	return x.ClientStream.SendMsg(m)
}

func (x *mMStreamPricesClient) Recv() (*Book, error) {
	m := new(Book)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *mMClient) StreamCommands(ctx context.Context, opts ...grpc.CallOption) (MM_StreamCommandsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_MM_serviceDesc.Streams[1], "/MM/StreamCommands", opts...)
	if err != nil {
		return nil, err
	}
	x := &mMStreamCommandsClient{stream}
	return x, nil
}

type MM_StreamCommandsClient interface {
	Send(*Status) error
	Recv() (*Command, error)
	grpc.ClientStream
}

type mMStreamCommandsClient struct {
	grpc.ClientStream
}

func (x *mMStreamCommandsClient) Send(m *Status) error {
	return x.ClientStream.SendMsg(m)
}

func (x *mMStreamCommandsClient) Recv() (*Command, error) {
	m := new(Command)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *mMClient) PushExecutionReport(ctx context.Context, in *ExecutionReport, opts ...grpc.CallOption) (*Confirmation, error) {
	out := new(Confirmation)
	err := c.cc.Invoke(ctx, "/MM/PushExecutionReport", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mMClient) GetConfig(ctx context.Context, in *Setup, opts ...grpc.CallOption) (*Config, error) {
	out := new(Config)
	err := c.cc.Invoke(ctx, "/MM/GetConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mMClient) StreamBook(ctx context.Context, opts ...grpc.CallOption) (MM_StreamBookClient, error) {
	stream, err := c.cc.NewStream(ctx, &_MM_serviceDesc.Streams[2], "/MM/StreamBook", opts...)
	if err != nil {
		return nil, err
	}
	x := &mMStreamBookClient{stream}
	return x, nil
}

type MM_StreamBookClient interface {
	Send(*Market) error
	Recv() (*Ccypair, error)
	grpc.ClientStream
}

type mMStreamBookClient struct {
	grpc.ClientStream
}

func (x *mMStreamBookClient) Send(m *Market) error {
	return x.ClientStream.SendMsg(m)
}

func (x *mMStreamBookClient) Recv() (*Ccypair, error) {
	m := new(Ccypair)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *mMClient) PushBalance(ctx context.Context, opts ...grpc.CallOption) (MM_PushBalanceClient, error) {
	stream, err := c.cc.NewStream(ctx, &_MM_serviceDesc.Streams[3], "/MM/PushBalance", opts...)
	if err != nil {
		return nil, err
	}
	x := &mMPushBalanceClient{stream}
	return x, nil
}

type MM_PushBalanceClient interface {
	Send(*Balance) error
	Recv() (*Balance, error)
	grpc.ClientStream
}

type mMPushBalanceClient struct {
	grpc.ClientStream
}

func (x *mMPushBalanceClient) Send(m *Balance) error {
	return x.ClientStream.SendMsg(m)
}

func (x *mMPushBalanceClient) Recv() (*Balance, error) {
	m := new(Balance)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// MMServer is the server API for MM service.
type MMServer interface {
	StreamPrices(MM_StreamPricesServer) error
	StreamCommands(MM_StreamCommandsServer) error
	PushExecutionReport(context.Context, *ExecutionReport) (*Confirmation, error)
	GetConfig(context.Context, *Setup) (*Config, error)
	StreamBook(MM_StreamBookServer) error
	PushBalance(MM_PushBalanceServer) error
}

// UnimplementedMMServer can be embedded to have forward compatible implementations.
type UnimplementedMMServer struct {
}

func (*UnimplementedMMServer) StreamPrices(srv MM_StreamPricesServer) error {
	return status.Errorf(codes.Unimplemented, "method StreamPrices not implemented")
}
func (*UnimplementedMMServer) StreamCommands(srv MM_StreamCommandsServer) error {
	return status.Errorf(codes.Unimplemented, "method StreamCommands not implemented")
}
func (*UnimplementedMMServer) PushExecutionReport(ctx context.Context, req *ExecutionReport) (*Confirmation, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PushExecutionReport not implemented")
}
func (*UnimplementedMMServer) GetConfig(ctx context.Context, req *Setup) (*Config, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetConfig not implemented")
}
func (*UnimplementedMMServer) StreamBook(srv MM_StreamBookServer) error {
	return status.Errorf(codes.Unimplemented, "method StreamBook not implemented")
}
func (*UnimplementedMMServer) PushBalance(srv MM_PushBalanceServer) error {
	return status.Errorf(codes.Unimplemented, "method PushBalance not implemented")
}

func RegisterMMServer(s *grpc.Server, srv MMServer) {
	s.RegisterService(&_MM_serviceDesc, srv)
}

func _MM_StreamPrices_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(MMServer).StreamPrices(&mMStreamPricesServer{stream})
}

type MM_StreamPricesServer interface {
	Send(*Book) error
	Recv() (*Ccypair, error)
	grpc.ServerStream
}

type mMStreamPricesServer struct {
	grpc.ServerStream
}

func (x *mMStreamPricesServer) Send(m *Book) error {
	return x.ServerStream.SendMsg(m)
}

func (x *mMStreamPricesServer) Recv() (*Ccypair, error) {
	m := new(Ccypair)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _MM_StreamCommands_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(MMServer).StreamCommands(&mMStreamCommandsServer{stream})
}

type MM_StreamCommandsServer interface {
	Send(*Command) error
	Recv() (*Status, error)
	grpc.ServerStream
}

type mMStreamCommandsServer struct {
	grpc.ServerStream
}

func (x *mMStreamCommandsServer) Send(m *Command) error {
	return x.ServerStream.SendMsg(m)
}

func (x *mMStreamCommandsServer) Recv() (*Status, error) {
	m := new(Status)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _MM_PushExecutionReport_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExecutionReport)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MMServer).PushExecutionReport(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/MM/PushExecutionReport",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MMServer).PushExecutionReport(ctx, req.(*ExecutionReport))
	}
	return interceptor(ctx, in, info, handler)
}

func _MM_GetConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Setup)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MMServer).GetConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/MM/GetConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MMServer).GetConfig(ctx, req.(*Setup))
	}
	return interceptor(ctx, in, info, handler)
}

func _MM_StreamBook_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(MMServer).StreamBook(&mMStreamBookServer{stream})
}

type MM_StreamBookServer interface {
	Send(*Ccypair) error
	Recv() (*Market, error)
	grpc.ServerStream
}

type mMStreamBookServer struct {
	grpc.ServerStream
}

func (x *mMStreamBookServer) Send(m *Ccypair) error {
	return x.ServerStream.SendMsg(m)
}

func (x *mMStreamBookServer) Recv() (*Market, error) {
	m := new(Market)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _MM_PushBalance_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(MMServer).PushBalance(&mMPushBalanceServer{stream})
}

type MM_PushBalanceServer interface {
	Send(*Balance) error
	Recv() (*Balance, error)
	grpc.ServerStream
}

type mMPushBalanceServer struct {
	grpc.ServerStream
}

func (x *mMPushBalanceServer) Send(m *Balance) error {
	return x.ServerStream.SendMsg(m)
}

func (x *mMPushBalanceServer) Recv() (*Balance, error) {
	m := new(Balance)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _MM_serviceDesc = grpc.ServiceDesc{
	ServiceName: "MM",
	HandlerType: (*MMServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "PushExecutionReport",
			Handler:    _MM_PushExecutionReport_Handler,
		},
		{
			MethodName: "GetConfig",
			Handler:    _MM_GetConfig_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "StreamPrices",
			Handler:       _MM_StreamPrices_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "StreamCommands",
			Handler:       _MM_StreamCommands_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "StreamBook",
			Handler:       _MM_StreamBook_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "PushBalance",
			Handler:       _MM_PushBalance_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "app.proto",
}
